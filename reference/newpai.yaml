openapi: 3.1.0
x-stoplight:
  id: i86bmo2n05tqd
info:
  title: newpai
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /test:
    options:
      summary: Your OPTIONS endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/User'
      operationId: options-test
      x-stoplight:
        id: zev6xme3a6br0
      requestBody:
        content:
          application/font-woff:
            schema:
              type: object
              properties:
                name:
                  type: string
                  x-stoplight:
                    id: 4qjepzx5wr6jb
                age:
                  type: string
                  x-stoplight:
                    id: lh6zqovbm4r9l
                nice:
                  type: string
                  x-stoplight:
                    id: xij7zzmobm9t3
                to:
                  type: string
                  x-stoplight:
                    id: czauq8oeepeuh
    patch:
      summary: Your PATCH endpoint
      tags: []
      responses: {}
      operationId: patch-test
      x-stoplight:
        id: z5waivi9totjl
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      x-stoplight:
        id: b045lkdyk243g
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
      x-stoplight:
        id: mcgak695df46v
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      x-stoplight:
        id: 1npfhxg3nndw4
  /test_copy:
    patch:
      summary: Your PATCH endpoint
      tags: []
      responses: {}
      operationId: patch-test
      x-stoplight:
        id: dpshko18b8ez1
    options:
      summary: Your OPTIONS endpoint
      tags: []
      responses: {}
      operationId: options-test
      x-stoplight:
        id: rl2amf6xln0vu
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          x-stoplight:
            id: dqzur2fz1hk6n
        firstName:
          type: string
          x-stoplight:
            id: la3d2cm6lyp56
        lastName:
          type: string
          x-stoplight:
            id: 1a9xq6w85ko48
        email:
          type: string
          format: email
          x-stoplight:
            id: b3q7779fei2na
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
          x-stoplight:
            id: 1wi5t2mx1gwk9
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
          x-stoplight:
            id: vnm4p6ejytlrb
        createDate:
          type: string
          format: date
          description: The date that the user was created.
          x-stoplight:
            id: vcb8j2yvx7j52
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
      x-stoplight:
        id: fwn1kci7wqxlu
